<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SP8eI1H/ISZa/yEmWv8hJlr/DRQk/0anzv9Wzf3/Vs39/ypje/cGDRGJAAAAAAAAAG6LiYj++Pb0//j2
        9P/49vT/+Pb0//j29P/49vT/+Pb0//j29P/49vT/+Pb0//j29P/49vT/+Pb0//j29P+HiYr/JUZT/1bM
        /P9Wzf3/UsTy/0CZvf8/lrr/P5a6/z+Wuv9Jrtb/Vs39/1bN/f9BnMH+Bg8S4gAAAAgAAAAAAAAAcIuK
        if/49vT/6+no/9fV0//X1dP/19XT/9fV0//X1dP/19XT/9fV0//m5OL/+Pb0//j29P/18/H/19XT/9fV
        0/9GSkv/JUZT/1LD8f9Wzf3/Vs39/1bN/f9Wzf3/Vs39/1bN/f9Wzf3/PY6v/wcRFOcAAAAkAAAAAAAA
        AAAAAABwi4qJ/+bk4v8WFRX/Dg0J/z43If8+NyH/Pjch/z43If8+NyH/GRcP/woKCv/HxsT/+Pb0/9PR
        0P9DQ0L/QkJB/0JCQf8/QED/Fh8i/zJyi/9Ls93/Vs39/1bN/f9TxvT/PZGz/yQ/Sv8HCAn+AAAAVQAA
        AAAAAAAAAAAAAAAAAHCLion/xsXD/z48Ov8cGhL/5clh//HUZv/x1Gb/8dRm/+/SZf8rJhj/SkZD/5uZ
        mP/49vT/+Pb0//j29P/49vT/+Pb0//j29P/g3tz/eXt8/y01OP8SGBr/Ehkb/xgeIP9TWVz/wsC+/2Vj
        Y/EAAABQAAAAAAAAAAAAAAAAAAAAcIuKif/GxcP/QT89/25nYP9BOiD/3cNe//HUZv/ozGL/YFUs/1BL
        Q/9fWlb/m5mY//j29P/49vT/+Pb0//j29P/49vT/+Pb0//j29P/49vT/+Pb0//j29P/49vT/+Pb0//j2
        9P/49vT/ZWNj8QAAAFAAAAAAAAAAAAAAAAAAAABwi4qJ/8bFw/9BPz3/u7Cp/3VuZ/8hHxf/Ih8U/x0a
        E/9iW1X/t62m/19aVv+bmZj/+Pb0//j29P/49vT/+Pb0//j29P/49vT/+Pb0//j29P/49vT/+Pb0//j2
        9P/49vT/+Pb0//j29P9lY2PxAAAAUAAAAAAAAAAAAAAAAAAAAHCLion/xsXD/0E/Pf+7sKn/u7Cp/1lW
        VP8VFhf/RUND/7Sqo/+7sKn/X1pW/5uZmP/49vT/0M7N/zMyMv8yMTH/MjEx/zIxMf8yMTH/MjEx/zIx
        Mf8yMTH/MjEx/zIxMf9gYF//+Pb0/2VjY/EAAABQAAAAAAAAAAAAAAAAAAAAcIuKif/GxcP/QT89/7uw
        qf+Kgn3/MjlC/5/C6P9KWGn/aWRh/7uwqf9fWlb/m5mY//j29P/49vT/6Ofl/+fm5P/n5uT/5+bk/+fm
        5P/n5uT/5+bk/+fm5P/n5uT/5+bk/+/t6//49vT/ZWNj8QAAAFAAAAAAAAAAAAAAAAAAAABwi4qJ/8bF
        w/9BPz3/u7Cp/4F5df8/SVX/pMfv/1ttgv9gXFr/u7Cp/19aVv+bmZj/+Pb0//j29P/49vT/+Pb0//j2
        9P/49vT/+Pb0//j29P/49vT/+Pb0//j29P/49vT/+Pb0//j29P9lY2PxAAAAUAAAAAAAAAAAAAAAAAAA
        AHCLion/xsXD/0E/Pf+7sKn/uK2m/zw7O/8YGh3/KCkq/62jnP+7sKn/X1pW/5uZmP/49vT/+Pb0//j2
        9P/49vT/+Pb0//j29P/49vT/+Pb0//j29P/49vT/+Pb0//j29P/49vT/+Pb0/2VjY/EAAABQAAAAAAAA
        AAAAAAAAAAAAcIuKif/Y1tT/ISAf/2ReWv9kXlr/ZF5a/2BaV/9kXlr/ZF5a/2ReWv8xLy3/r66s//j2
        9P/j4d//hYSD/4SDgv+Eg4L/hIOC/4SDgv+Eg4L/hIOC/4SDgv+Eg4L/hIOC/6KhoP/49vT/ZWNj8QAA
        AFAAAAAAAAAAAAAAAAAAAABwi4qJ//j29P+4trX/lZSS/5WUkv+VlJL/lZSS/5WUkv+VlJL/lZSS/6em
        pf/39fP/+Pb0/+bk4v+VlJL/lZSS/5WUkv+VlJL/lZSS/5WUkv+VlJL/lZSS/5WUkv+VlJL/rayq//j2
        9P9lY2PxAAAAUAAAAAAAAAAAAAAAAAAAAHBwb27/xsXD/8bFw//GxcP/xsXD/8bFw//GxcP/xsXD/8bF
        w//GxcP/xsXD/8bFw//GxcP/xsXD/8bFw//GxcP/xsXD/8bFw//GxcP/xsXD/8bFw//GxcP/xsXD/8bF
        w//GxcP/xsXD/09OTfQAAABQAAAAAAAAAAAAAAAAAAAAcB0ZLv8zLVL/My1S/zMtUv8zLVL/My1S/zMt
        Uv8zLVL/My1S/zMtUv8zLVL/My1S/zMtUv8zLVL/My1S/zMtUv8zLVL/My1S/zMtUv8zLVL/My1S/zMt
        Uv8zLVL/My1S/zMtUv8zLVL/FxQi/gAAAFAAAAAAAAAAAAAAAAAAAABwST2L/4Js9/+CbPf/gmz3/4Js
        9/+CbPf/gmz3/4Js9/+CbPf/gmz3/4Js9/+CbPf/gmz3/4Js9/+CbPf/gmz3/4Js9/+CbPf/gmz3/4Js
        9/+CbPf/gmz3/4Js9/+CbPf/gmz3/4Js9/8+NWz9AAAAUAAAAAAAAAAAAAAAAAAAAHBJPYv/gmz3/4Js
        9/+CbPf/gmz3/4Js9/9rWcr/GhYx/xoWMf8aFjH/GhYx/xoWMf8aFjH/GhYx/xoWMf8aFjH/GhYx/xoW
        Mf8aFjH/GxYz/3dj4v+CbPf/gmz3/4Js9/+CbPf/gmz3/z41bP0AAABQAAAAAAAAAAAAAAAAAAAAaEc8
        g/+CbPf/gmz3/4Js9/+CbPf/gmz3/4Js9/96Zef/eWXn/3ll5/95Zef/eWXn/3ll5/95Zef/eWXn/3ll
        5/95Zef/eWXn/3ll5/97Zun/gmz3/4Js9/+CbPf/gmz3/4Js9/+CbPf/OjJi/QAAAEgAAAAAAAAAAAAA
        AAAAAAAhFBIc9UU6gP9FOoT/RTqE/0U6hP9FOoT/RTqE/0U6hP9FOoT/RTqE/0U6hP9FOoT/RTqE/0U6
        hP9FOoT/RTqE/0U6hP9FOoT/RTqE/0U6hP9FOoT/RTqE/0U6hP9FOoT/RTqE/0M4ev8TERvwAAAADwAA
        AAAAAAAAAAAAAAAAAAAAAAAhAAAAawAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAA
        AHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAdwAAAHcAAAB3AAAAZwAA
        ABYAAAAAAAAAAAAAAAAAAAAA///wP///wA///4AH//8AA///AAH//gAB//4AAP/+AAD//gAA//4AAP/+
        AACAAAAAAAAAAQAAAAEAAAADAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAA
        AAcAAAAHAAAABwAAAAcAAAAHAAAAB4AAAA8=
</value>
  </data>
</root>